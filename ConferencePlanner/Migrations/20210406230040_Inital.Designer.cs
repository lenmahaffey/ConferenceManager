// <auto-generated />
using System;
using ConferenceManager.Services.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ConferenceManager.Migrations
{
    [DbContext(typeof(ConferenceManagerContext))]
    [Migration("20210406230040_Inital")]
    partial class Inital
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ConferenceManager.Models.Entities.Attendee", b =>
                {
                    b.Property<int>("AttendeeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateRegistered")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<bool>("IsPresenter")
                        .HasColumnType("bit");

                    b.Property<bool>("IsStaff")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AttendeeID");

                    b.ToTable("Attendees");

                    b.HasData(
                        new
                        {
                            AttendeeID = 101,
                            DateRegistered = new DateTime(2021, 4, 6, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "steve@juno.com",
                            FirstName = "Steve",
                            IsPresenter = true,
                            IsStaff = false,
                            LastName = "Johnson",
                            Phone = "303-303-3030"
                        },
                        new
                        {
                            AttendeeID = 102,
                            DateRegistered = new DateTime(2021, 4, 6, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "dave@juno.com",
                            FirstName = "Dave",
                            IsPresenter = true,
                            IsStaff = false,
                            LastName = "Jackson",
                            Phone = "303-303-3031"
                        },
                        new
                        {
                            AttendeeID = 103,
                            DateRegistered = new DateTime(2021, 4, 6, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "cherrith@marritimelaw.com",
                            FirstName = "Cherrith",
                            IsPresenter = false,
                            IsStaff = false,
                            LastName = "Goodstory",
                            Phone = "303-303-3032"
                        },
                        new
                        {
                            AttendeeID = 104,
                            DateRegistered = new DateTime(2021, 4, 6, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "friz@wb.com",
                            FirstName = "Friz",
                            IsPresenter = true,
                            IsStaff = false,
                            LastName = "Freeling",
                            Phone = "303-303-3033"
                        },
                        new
                        {
                            AttendeeID = 105,
                            DateRegistered = new DateTime(2021, 4, 6, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "wil@varoom.com",
                            FirstName = "Wile E",
                            IsPresenter = true,
                            IsStaff = false,
                            LastName = "Coyote",
                            Phone = "303-303-3034"
                        },
                        new
                        {
                            AttendeeID = 106,
                            DateRegistered = new DateTime(2021, 4, 6, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "bill@compuserve.com",
                            FirstName = "Bill",
                            IsPresenter = false,
                            IsStaff = false,
                            LastName = "Smith",
                            Phone = "303-303-3035"
                        });
                });

            modelBuilder.Entity("ConferenceManager.Models.Entities.Conference", b =>
                {
                    b.Property<int>("ConferenceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ConferenceID");

                    b.ToTable("Conferences");

                    b.HasData(
                        new
                        {
                            ConferenceID = 1001,
                            Description = "The largest gathering of national association directors and managers in the world.",
                            EndDate = new DateTime(2021, 4, 10, 0, 0, 0, 0, DateTimeKind.Local),
                            Name = "International Association of National Associations",
                            StartDate = new DateTime(2021, 4, 6, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            ConferenceID = 1002,
                            Description = "An exposition of the latest in roadrunner hunting equipment",
                            EndDate = new DateTime(2021, 4, 15, 0, 0, 0, 0, DateTimeKind.Local),
                            Name = "Acme Corp",
                            StartDate = new DateTime(2021, 4, 11, 0, 0, 0, 0, DateTimeKind.Local)
                        });
                });

            modelBuilder.Entity("ConferenceManager.Models.Entities.Presentation", b =>
                {
                    b.Property<int>("PresentationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AttendeeID")
                        .HasColumnType("int");

                    b.Property<int>("ConferenceID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("RoomID")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("PresentationID");

                    b.HasIndex("AttendeeID");

                    b.HasIndex("ConferenceID");

                    b.HasIndex("RoomID");

                    b.ToTable("Presentations");

                    b.HasData(
                        new
                        {
                            PresentationID = 101,
                            AttendeeID = 102,
                            ConferenceID = 1001,
                            Description = "Hear our president discuss the role of professional organizations in the 21st century",
                            EndTime = new DateTime(2021, 4, 7, 19, 0, 39, 867, DateTimeKind.Local).AddTicks(1262),
                            Name = "Professional Associations in the 21st century",
                            RoomID = 1010,
                            StartTime = new DateTime(2021, 4, 7, 17, 0, 39, 867, DateTimeKind.Local).AddTicks(856)
                        },
                        new
                        {
                            PresentationID = 102,
                            AttendeeID = 101,
                            ConferenceID = 1001,
                            Description = "Join a discussion about the various services a professional organization can offer it's members",
                            EndTime = new DateTime(2021, 4, 8, 19, 0, 39, 867, DateTimeKind.Local).AddTicks(1744),
                            Name = "Member Services",
                            RoomID = 1011,
                            StartTime = new DateTime(2021, 4, 8, 17, 0, 39, 867, DateTimeKind.Local).AddTicks(1728)
                        },
                        new
                        {
                            PresentationID = 103,
                            AttendeeID = 104,
                            ConferenceID = 1002,
                            Description = "Learn about the proper application of our tunnel paint in dry arid climates.",
                            EndTime = new DateTime(2021, 4, 8, 19, 0, 39, 867, DateTimeKind.Local).AddTicks(1756),
                            Name = "Paint Application in Aird Climates",
                            RoomID = 1011,
                            StartTime = new DateTime(2021, 4, 8, 17, 0, 39, 867, DateTimeKind.Local).AddTicks(1753)
                        },
                        new
                        {
                            PresentationID = 104,
                            AttendeeID = 105,
                            ConferenceID = 1002,
                            Description = "Our rockets aren't just for hunting! Come hear about Acme's plans to land the first coyote on the moon",
                            EndTime = new DateTime(2021, 4, 8, 19, 0, 39, 867, DateTimeKind.Local).AddTicks(1761),
                            Name = "Acme Orbital",
                            RoomID = 1013,
                            StartTime = new DateTime(2021, 4, 8, 17, 0, 39, 867, DateTimeKind.Local).AddTicks(1759)
                        });
                });

            modelBuilder.Entity("ConferenceManager.Models.Entities.Room", b =>
                {
                    b.Property<int>("RoomID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CrescentRoundCapacity")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("SchoolRoomCapacity")
                        .HasColumnType("int");

                    b.Property<int?>("TheatreCapacity")
                        .HasColumnType("int");

                    b.Property<int>("VenueID")
                        .HasColumnType("int");

                    b.HasKey("RoomID");

                    b.HasIndex("VenueID");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            RoomID = 1010,
                            CrescentRoundCapacity = 65,
                            Name = "101",
                            SchoolRoomCapacity = 50,
                            TheatreCapacity = 100,
                            VenueID = 10
                        },
                        new
                        {
                            RoomID = 1011,
                            CrescentRoundCapacity = 65,
                            Name = "201",
                            SchoolRoomCapacity = 50,
                            TheatreCapacity = 100,
                            VenueID = 10
                        },
                        new
                        {
                            RoomID = 1012,
                            CrescentRoundCapacity = 650,
                            Name = "Mile High Ballroom",
                            SchoolRoomCapacity = 500,
                            TheatreCapacity = 1000,
                            VenueID = 10
                        },
                        new
                        {
                            RoomID = 1013,
                            CrescentRoundCapacity = 350,
                            Name = "Marco Polo Ballroom",
                            SchoolRoomCapacity = 250,
                            TheatreCapacity = 500,
                            VenueID = 11
                        },
                        new
                        {
                            RoomID = 1014,
                            CrescentRoundCapacity = 65,
                            Name = "Red Rover",
                            SchoolRoomCapacity = 50,
                            TheatreCapacity = 100,
                            VenueID = 11
                        });
                });

            modelBuilder.Entity("ConferenceManager.Models.Entities.Venue", b =>
                {
                    b.Property<int>("VenueID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address1")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.HasKey("VenueID");

                    b.ToTable("Venue");

                    b.HasData(
                        new
                        {
                            VenueID = 10,
                            Address1 = "700 14th St",
                            City = "Denver",
                            Name = "Colorado Convention Center",
                            Phone = "303-303-0000",
                            PostalCode = "80202",
                            State = "CO"
                        },
                        new
                        {
                            VenueID = 11,
                            Address1 = "1405 Curtis St",
                            City = "Denver",
                            Name = "The Curtis Hotel",
                            Phone = "720-303-0000",
                            PostalCode = "80202",
                            State = "CO"
                        });
                });

            modelBuilder.Entity("ConferenceManager.Models.Entities.Presentation", b =>
                {
                    b.HasOne("ConferenceManager.Models.Entities.Attendee", "Attendee")
                        .WithMany()
                        .HasForeignKey("AttendeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ConferenceManager.Models.Entities.Conference", "Conference")
                        .WithMany("Presentations")
                        .HasForeignKey("ConferenceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ConferenceManager.Models.Entities.Room", "Room")
                        .WithMany("Presentations")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ConferenceManager.Models.Entities.Room", b =>
                {
                    b.HasOne("ConferenceManager.Models.Entities.Venue", "Venue")
                        .WithMany("Rooms")
                        .HasForeignKey("VenueID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
